{"ast":null,"code":"import { collection, getDocs, getFirestore } from \"firebase/firestore\";\nimport { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport shopActionTypes from \"./shop.types\";\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const db = getFirestore();\n    const collectionsRef = collection(db, \"collections\");\n    dispatch(fetchCollectionsStart());\n    getDocs(collectionsRef).then(async snapshot => {\n      const collectionsMap = await convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(err => dispatch(fetchCollectionsFailure(err === null || err === void 0 ? void 0 : err.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/mustafa/Desktop/project/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["collection","getDocs","getFirestore","convertCollectionsSnapshotToMap","shopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","db","collectionsRef","then","snapshot","catch","err","message"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,YAA9B,QAAkD,oBAAlD;AACA,SAASC,+BAAT,QAAgD,+BAAhD;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBADkC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,EAAE,GAAGf,YAAY,EAAvB;AACA,UAAMgB,cAAc,GAAGlB,UAAU,CAACiB,EAAD,EAAK,aAAL,CAAjC;AACAD,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAJ,IAAAA,OAAO,CAACiB,cAAD,CAAP,CACGC,IADH,CACQ,MAAOC,QAAP,IAAoB;AACxB,YAAMX,cAAc,GAAG,MAAMN,+BAA+B,CAACiB,QAAD,CAA5D;AACAJ,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KAJH,EAKGY,KALH,CAKUC,GAAD,IAASN,QAAQ,CAACJ,uBAAuB,CAACU,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEC,OAAN,CAAxB,CAL1B;AAMD,GAVD;AAWD,CAZM","sourcesContent":["import { collection, getDocs, getFirestore } from \"firebase/firestore\";\r\nimport { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport shopActionTypes from \"./shop.types\";\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: shopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\r\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => ({\r\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload: errorMessage,\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return (dispatch) => {\r\n    const db = getFirestore();\r\n    const collectionsRef = collection(db, \"collections\");\r\n    dispatch(fetchCollectionsStart());\r\n    getDocs(collectionsRef)\r\n      .then(async (snapshot) => {\r\n        const collectionsMap = await convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n      })\r\n      .catch((err) => dispatch(fetchCollectionsFailure(err?.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}