{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mustafa\\\\Desktop\\\\project\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const db = getFirestore();\n    const collectionsRef = collection(db, \"collections\");\n    const collectionsItem = getDocs(collectionsRef);\n    collectionsItem.then(async Snapshot => {\n      const convertedCollection = await convertCollectionsSnapshotToMap(Snapshot);\n      updateCollections(convertedCollection);\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/mustafa/Desktop/project/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","collection","getDocs","getFirestore","Route","CollectionsOverview","CollectionPage","convertCollectionsSnapshotToMap","connect","updateCollections","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","props","db","collectionsRef","collectionsItem","then","Snapshot","convertedCollection","catch","error","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,YAA9B,QAAkD,oBAAlD;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,+BAAT,QAAgD,+BAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;;AAEA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEJ,MAAAA;AAAF,QAAwB,KAAKK,KAAnC;AAEA,UAAMC,EAAE,GAAGZ,YAAY,EAAvB;AACA,UAAMa,cAAc,GAAGf,UAAU,CAACc,EAAD,EAAK,aAAL,CAAjC;AAEA,UAAME,eAAe,GAAGf,OAAO,CAACc,cAAD,CAA/B;AAEAC,IAAAA,eAAe,CACZC,IADH,CACQ,MAAOC,QAAP,IAAoB;AACxB,YAAMC,mBAAmB,GAAG,MAAMb,+BAA+B,CAC/DY,QAD+D,CAAjE;AAGAV,MAAAA,iBAAiB,CAACW,mBAAD,CAAjB;AACD,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAPpB;AAQD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKZ,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEtB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEqB,KAAK,CAACC,IAAK,gBAFtB;AAGE,QAAA,SAAS,EAAErB;AAHb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAjCoC;;AAmCvC,MAAMsB,kBAAkB,GAAIC,QAAD,KAAe;AACxCpB,EAAAA,iBAAiB,EAAGqB,cAAD,IACjBD,QAAQ,CAACpB,iBAAiB,CAACqB,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAIA,eAAetB,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkClB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\nimport { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\n\r\nclass ShopPage extends React.Component {\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n\r\n    const db = getFirestore();\r\n    const collectionsRef = collection(db, \"collections\");\r\n\r\n    const collectionsItem = getDocs(collectionsRef);\r\n\r\n    collectionsItem\r\n      .then(async (Snapshot) => {\r\n        const convertedCollection = await convertCollectionsSnapshotToMap(\r\n          Snapshot\r\n        );\r\n        updateCollections(convertedCollection);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n        <Route\r\n          exact\r\n          path={`${match.path}/:collectionId`}\r\n          component={CollectionPage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCollections: (collectionsMap) =>\r\n    dispatch(updateCollections(collectionsMap)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}