{"ast":null,"code":"// import { collection, getDocs, getFirestore } from \"firebase/firestore\";\n// import { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport shopActionTypes from \"./shop.types\";\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); // export const fetchCollectionsStartAsync = () => {\n//   return (dispatch) => {\n//     const db = getFirestore();\n//     const collectionsRef = collection(db, \"collections\");\n//     dispatch(fetchCollectionsStart());\n//     getDocs(collectionsRef)\n//       .then(async (snapshot) => {\n//         const collectionsMap = await convertCollectionsSnapshotToMap(snapshot);\n//         dispatch(fetchCollectionsSuccess(collectionsMap));\n//       })\n//       .catch((err) => dispatch(fetchCollectionsFailure(err?.message)));\n//   };\n// };","map":{"version":3,"sources":["C:/Users/mustafa/Desktop/project/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA;AACA;AACA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC1DH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADoC;AAE1DC,EAAAA,OAAO,EAAEF;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBADkC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { collection, getDocs, getFirestore } from \"firebase/firestore\";\r\n// import { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport shopActionTypes from \"./shop.types\";\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: shopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\r\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap,\r\n});\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => ({\r\n  type: shopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  payload: errorMessage,\r\n});\r\n\r\n// export const fetchCollectionsStartAsync = () => {\r\n//   return (dispatch) => {\r\n//     const db = getFirestore();\r\n//     const collectionsRef = collection(db, \"collections\");\r\n//     dispatch(fetchCollectionsStart());\r\n//     getDocs(collectionsRef)\r\n//       .then(async (snapshot) => {\r\n//         const collectionsMap = await convertCollectionsSnapshotToMap(snapshot);\r\n//         dispatch(fetchCollectionsSuccess(collectionsMap));\r\n//       })\r\n//       .catch((err) => dispatch(fetchCollectionsFailure(err?.message)));\r\n//   };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}