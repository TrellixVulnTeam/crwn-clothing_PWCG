{"ast":null,"code":"import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.types\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInFailure, googleSignInSuccess } from \"./user.actions\";\nconst auth = getAuth();\nexport function* signInWithGoogle() {\n  console.log(\"im fired\");\n\n  try {\n    const provider = new GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: \"select_account\"\n    });\n    const {\n      user\n    } = yield signInWithPopup(auth, provider);\n    const userRef = yield call(createUserProfileDocument, user);\n    yield put(googleSignInSuccess({\n      id: userRef.id,\n      ...userRef.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload\n}) {\n  console.log(payload);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/mustafa/Desktop/project/crwn-clothing/src/redux/user/user.saga.js"],"names":["all","takeLatest","call","put","userActionTypes","getAuth","GoogleAuthProvider","signInWithPopup","createUserProfileDocument","googleSignInFailure","googleSignInSuccess","auth","signInWithGoogle","console","log","provider","setCustomParameters","prompt","user","userRef","id","data","error","signInWithEmail","payload","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,OAAT,EAAkBC,kBAAlB,EAAsCC,eAAtC,QAA6D,eAA7D;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD;AAEA,MAAMC,IAAI,GAAGN,OAAO,EAApB;AAEA,OAAO,UAAUO,gBAAV,GAA6B;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,IAAIT,kBAAJ,EAAjB;AACAS,IAAAA,QAAQ,CAACC,mBAAT,CAA6B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA7B;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMX,eAAe,CAACI,IAAD,EAAOI,QAAP,CAAtC;AACA,UAAMI,OAAO,GAAG,MAAMjB,IAAI,CAACM,yBAAD,EAA4BU,IAA5B,CAA1B;AACA,UAAMf,GAAG,CAACO,mBAAmB,CAAC;AAAEU,MAAAA,EAAE,EAAED,OAAO,CAACC,EAAd;AAAkB,SAAGD,OAAO,CAACE,IAAR;AAArB,KAAD,CAApB,CAAT;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACM,mBAAmB,CAACa,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA;AAAD,CAA1B,EAAqC;AAE5CX,EAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ;AACC;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMxB,UAAU,CAACG,eAAe,CAACsB,oBAAjB,EAAuCd,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUe,kBAAV,GAA+B;AACpC,QAAM1B,UAAU,CAACG,eAAe,CAACwB,mBAAjB,EAAsCL,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUM,SAAV,GAAsB;AAC3B,QAAM7B,GAAG,CAAC,CAACE,IAAI,CAACuB,mBAAD,CAAL,EAA2BvB,IAAI,CAACyB,kBAAD,CAA/B,CAAD,CAAT;AACD","sourcesContent":["import { all, takeLatest, call, put } from \"redux-saga/effects\";\r\nimport userActionTypes from \"./user.types\";\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { createUserProfileDocument } from \"../../firebase/firebase.utils\";\r\nimport { googleSignInFailure, googleSignInSuccess } from \"./user.actions\";\r\n\r\nconst auth = getAuth();\r\n\r\nexport function* signInWithGoogle() {\r\n  console.log(\"im fired\");\r\n  try {\r\n    const provider = new GoogleAuthProvider();\r\n    provider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\n    const { user } = yield signInWithPopup(auth, provider);\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    yield put(googleSignInSuccess({ id: userRef.id, ...userRef.data() }));\r\n  } catch (error) {\r\n    yield put(googleSignInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({payload}) {\r\n\r\nconsole.log(payload);\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart),call(onEmailSignInStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}