{"ast":null,"code":"import { all, takeLatest, call, put } from \"redux-saga/effects\";\nimport { createUserWithEmailAndPassword, getAuth } from \"firebase/auth\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { createUserProfileDocument, getCurrentUser, signInWithGoogleAuth } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure } from \"./user.actions\";\nimport userActionTypes from \"./user.types\";\nconst auth = getAuth();\nexport function* getSnapshotFromUserAuth(user) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user);\n    yield put(signInSuccess({\n      id: userRef.id,\n      ...userRef.data()\n    }));\n  } catch (error) {\n    console.error(error);\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield signInWithGoogleAuth();\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield signInWithEmailAndPassword(auth, email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password\n  }\n}) {\n  // try{\n  //   const { user } = yield createUserWithEmailAndPassword(\n  //     auth,\n  //     email,\n  //     password\n  //   );\n  //   // const userAuth = yield getCurrentUser()\n  //   // console.log(\"userAuth\" ,userAuth)\n  //   yield getSnapshotFromUserAuth(user)\n  // }catch(error){\n  //   yield put(signUpFailure(error))\n  // }\n  yield console.log(payload);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/mustafa/Desktop/project/crwn-clothing/src/redux/user/user.saga.js"],"names":["all","takeLatest","call","put","createUserWithEmailAndPassword","getAuth","signInWithEmailAndPassword","createUserProfileDocument","getCurrentUser","signInWithGoogleAuth","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","userActionTypes","auth","getSnapshotFromUserAuth","user","userRef","id","data","error","console","signInWithGoogle","signInWithEmail","payload","email","password","isUserAuthenticated","userAuth","signOut","signUp","log","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { all, takeLatest, call, put } from \"redux-saga/effects\";\r\n\r\nimport { createUserWithEmailAndPassword, getAuth } from \"firebase/auth\";\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { createUserProfileDocument, getCurrentUser ,signInWithGoogleAuth} from \"../../firebase/firebase.utils\";\r\n\r\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure } from \"./user.actions\";\r\n\r\nimport userActionTypes from \"./user.types\";\r\n\r\n\r\nconst auth = getAuth();\r\n\r\nexport function* getSnapshotFromUserAuth(user) {\r\n  try {\r\n    const userRef = yield call(createUserProfileDocument, user);\r\n    yield put(signInSuccess({ id: userRef.id, ...userRef.data() }));\r\n  } catch (error) {\r\n    console.error(error)\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n  try {\r\n    const { user } = yield signInWithGoogleAuth()\r\n\r\n     yield getSnapshotFromUserAuth(user)\r\n  } catch (error) {\r\n    yield put(signInFailure(error));\r\n  }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email , password}}) {\r\n  try{\r\n    const {user} = yield signInWithEmailAndPassword(auth ,email ,password)\r\n    \r\n   yield getSnapshotFromUserAuth(user)\r\n  }catch(error){\r\n    yield put(signInFailure(error))\r\n  }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n  try{\r\n    const userAuth = yield getCurrentUser()\r\n    if(!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth)\r\n  }catch(error){\r\n    yield put(signInFailure(error))\r\n  }\r\n}\r\n\r\nexport function* signOut() {\r\n  try{\r\n    yield auth.signOut()\r\n    yield put(signOutSuccess())\r\n  }catch(error){\r\n    yield put(signOutFailure(error))\r\n  }\r\n}\r\n\r\nexport function* signUp({payload:{email, password }}) {\r\n  // try{\r\n  //   const { user } = yield createUserWithEmailAndPassword(\r\n  //     auth,\r\n  //     email,\r\n  //     password\r\n  //   );\r\n  //   // const userAuth = yield getCurrentUser()\r\n  //   // console.log(\"userAuth\" ,userAuth)\r\n  //   yield getSnapshotFromUserAuth(user)\r\n  // }catch(error){\r\n  //   yield put(signUpFailure(error))\r\n  // }\r\n  yield console.log(payload)\r\n}\r\n\r\n\r\nexport function* onGoogleSignInStart() {\r\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\r\n}\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([call(onGoogleSignInStart),call(onEmailSignInStart),call(onCheckUserSession) , call(onSignOutStart) ,call(onSignUpStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}