{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mustafa\\\\Desktop\\\\project\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { collection, getFirestore, onSnapshot } from \"firebase/firestore\";\nimport { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const db = getFirestore();\n    const collectionsRef = collection(db, \"collections\");\n    this.unsubscribeFromSnapshot = onSnapshot(collectionsRef, async snapshot => {\n      const convertedCollection = await convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(convertedCollection);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSnapshot();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isLoading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: isLoading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/mustafa/Desktop/project/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","collection","getFirestore","onSnapshot","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","isLoading","unsubscribeFromSnapshot","componentDidMount","props","db","collectionsRef","snapshot","convertedCollection","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,UAAnC,QAAqD,oBAArD;AACA,SAASC,+BAAT,QAAgD,+BAAhD;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;KAAME,8B;AACN,MAAMC,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;MAAME,yB;;AACN,MAAMC,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,SAAS,EAAE;AADL,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC;AAEA,UAAMC,EAAE,GAAGhB,YAAY,EAAvB;AACA,UAAMiB,cAAc,GAAGlB,UAAU,CAACiB,EAAD,EAAK,aAAL,CAAjC;AAEA,SAAKH,uBAAL,GAA+BZ,UAAU,CACvCgB,cADuC,EAEvC,MAAOC,QAAP,IAAoB;AAClB,YAAMC,mBAAmB,GAAG,MAAMjB,+BAA+B,CAC/DgB,QAD+D,CAAjE;AAGAf,MAAAA,iBAAiB,CAACgB,mBAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KARsC,CAAzC;AAUD;;AACDS,EAAAA,oBAAoB,GAAG;AACrB,SAAKR,uBAAL;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAFtB;AAGE,QAAA,MAAM,EAAGT,KAAD,iBACN,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEH,SAA3C;AAAA,aAA0DG;AAA1D;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBAFtB;AAGE,QAAA,MAAM,EAAGT,KAAD,iBACN,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,SAAtC;AAAA,aAAqDG;AAArD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AAlDoC;;AAoDvC,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACxCvB,EAAAA,iBAAiB,EAAGwB,cAAD,IACjBD,QAAQ,CAACvB,iBAAiB,CAACwB,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAIA,eAAe9B,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport { collection, getFirestore, onSnapshot } from \"firebase/firestore\";\r\nimport { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\n\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\r\nimport CollectionPage from \"../collection/collection.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n  };\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n\r\n    const db = getFirestore();\r\n    const collectionsRef = collection(db, \"collections\");\r\n\r\n    this.unsubscribeFromSnapshot = onSnapshot(\r\n      collectionsRef,\r\n      async (snapshot) => {\r\n        const convertedCollection = await convertCollectionsSnapshotToMap(\r\n          snapshot\r\n        );\r\n        updateCollections(convertedCollection);\r\n        this.setState({ isLoading: false });\r\n      }\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    this.unsubscribeFromSnapshot();\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    const { isLoading } = this.state;\r\n\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={(props) => (\r\n            <CollectionsOverviewWithSpinner isLoading={isLoading} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={`${match.path}/:collectionId`}\r\n          render={(props) => (\r\n            <CollectionPageWithSpinner isLoading={isLoading} {...props} />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCollections: (collectionsMap) =>\r\n    dispatch(updateCollections(collectionsMap)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}