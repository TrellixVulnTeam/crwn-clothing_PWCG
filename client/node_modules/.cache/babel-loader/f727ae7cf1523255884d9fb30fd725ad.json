{"ast":null,"code":"import { takeLatest, call, put, all } from \"@redux-saga/core/effects\";\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\nimport { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nimport shopActionTypes from \"./shop.types\";\n\nfunction* fetchCollectionsAsync() {\n  try {\n    const db = getFirestore();\n    const collectionsRef = collection(db, \"collections\");\n    const snapshot = yield getDocs(collectionsRef);\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFailure(err === null || err === void 0 ? void 0 : err.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/mustafa/Desktop/project/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeLatest","call","put","all","collection","getDocs","getFirestore","convertCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","shopActionTypes","fetchCollectionsAsync","db","collectionsRef","snapshot","collectionsMap","err","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA0C,0BAA1C;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,YAA9B,QAAkD,oBAAlD;AACA,SAASC,+BAAT,QAAgD,+BAAhD;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;;AAEA,UAAUC,qBAAV,GAAkC;AAChC,MAAI;AACF,UAAMC,EAAE,GAAGN,YAAY,EAAvB;AACA,UAAMO,cAAc,GAAGT,UAAU,CAACQ,EAAD,EAAK,aAAL,CAAjC;AACA,UAAME,QAAQ,GAAG,MAAMT,OAAO,CAACQ,cAAD,CAA9B;AACA,UAAME,cAAc,GAAG,MAAMd,IAAI,CAC/BM,+BAD+B,EAE/BO,QAF+B,CAAjC;AAIA,UAAMZ,GAAG,CAACO,uBAAuB,CAACM,cAAD,CAAxB,CAAT;AACD,GATD,CASE,OAAOC,GAAP,EAAY;AACZ,UAAMd,GAAG,CAACM,uBAAuB,CAACQ,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAEC,OAAN,CAAxB,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMlB,UAAU,CACdU,eAAe,CAACS,uBADF,EAEdR,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUS,SAAV,GAAsB;AAC5B,QAAMjB,GAAG,CAAC,CAACF,IAAI,CAACiB,qBAAD,CAAL,CAAD,CAAT;AACA","sourcesContent":["import { takeLatest, call, put ,all} from \"@redux-saga/core/effects\";\r\nimport { collection, getDocs, getFirestore } from \"firebase/firestore\";\r\nimport { convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\r\nimport {\r\n  fetchCollectionsFailure,\r\n  fetchCollectionsSuccess,\r\n} from \"./shop.actions\";\r\n\r\nimport shopActionTypes from \"./shop.types\";\r\n\r\nfunction* fetchCollectionsAsync() {\r\n  try {\r\n    const db = getFirestore();\r\n    const collectionsRef = collection(db, \"collections\");\r\n    const snapshot = yield getDocs(collectionsRef);\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotToMap,\r\n      snapshot\r\n    );\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n  } catch (err) {\r\n    yield put(fetchCollectionsFailure(err?.message));\r\n  }\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeLatest(\r\n    shopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\n\r\nexport function* shopSagas() {\r\n yield all([call(fetchCollectionsStart)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}