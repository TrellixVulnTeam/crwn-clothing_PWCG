{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { collection, doc, getDoc, getDocs, getFirestore, setDoc, writeBatch } from \"firebase/firestore\"; // Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAfWKQQsrDJngAVnfnQEZtAFYrRlMVYZaY\",\n  authDomain: \"crown-clothing-9ffa8.firebaseapp.com\",\n  projectId: \"crown-clothing-9ffa8\",\n  storageBucket: \"crown-clothing-9ffa8.appspot.com\",\n  messagingSenderId: \"133838497942\",\n  appId: \"1:133838497942:web:f791c6b52c03125a773ab7\",\n  measurementId: \"G-FR975M0JED\"\n}; // Initialize Firebase\n\ninitializeApp(firebaseConfig);\nconst db = getFirestore();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = doc(db, \"users\", userAuth.uid);\n\n  try {\n    const snapShot = await getDoc(userRef);\n    console.log(\"userAuth\", snapShot);\n\n    if (!snapShot.exists()) {\n      const {\n        displayName,\n        email\n      } = userAuth;\n      const createdAt = new Date();\n\n      try {\n        setDoc(userRef, {\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        });\n      } catch (e) {\n        console.error(\"error while setting user data in firestore\", e);\n      }\n    }\n\n    return snapShot;\n  } catch (e) {\n    console.log(\"firebase err\", e === null || e === void 0 ? void 0 : e.message);\n  }\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = await getDocs(collection(db, collectionKey));\n  console.log(collectionRef.metadata); // const batch = writeBatch()\n  // objectsToAdd.forEach(obj=>{\n  //   const newDocRef = collectionRef.docs()\n  // })\n};\nexport const auth = getAuth(); // export const firestore = firebase.firestore();\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => signInWithPopup(auth, provider).then(res => console.log(res)).catch(e => console.error(\"google sign in error\", e)); // export default firebase;","map":{"version":3,"sources":["C:/Users/mustafa/Desktop/project/crwn-clothing/src/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","collection","doc","getDoc","getDocs","getFirestore","setDoc","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","createUserProfileDocument","userAuth","additionalData","userRef","uid","snapShot","console","log","exists","displayName","email","createdAt","Date","e","error","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","metadata","auth","provider","setCustomParameters","prompt","signInWithGoogle","then","res","catch"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAkBC,kBAAlB,EAAsCC,eAAtC,QAA6D,eAA7D;AACA,SACEC,UADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,OAJF,EAKEC,YALF,EAMEC,MANF,EAOEC,UAPF,QAQO,oBARP,C,CAUA;AACA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,sCAFS;AAGrBC,EAAAA,SAAS,EAAE,sBAHU;AAIrBC,EAAAA,aAAa,EAAE,kCAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB,C,CASA;;AACAlB,aAAa,CAACW,cAAD,CAAb;AAEA,MAAMQ,EAAE,GAAGX,YAAY,EAAvB;AACA,OAAO,MAAMY,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGlB,GAAG,CAACc,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACG,GAAvB,CAAnB;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMnB,MAAM,CAACiB,OAAD,CAA7B;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;;AAEA,QAAI,CAACA,QAAQ,CAACG,MAAT,EAAL,EAAwB;AACtB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAAyBT,QAA/B;AACA,YAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,UAAI;AACFvB,QAAAA,MAAM,CAACc,OAAD,EAAU;AACdM,UAAAA,WADc;AAEdC,UAAAA,KAFc;AAGdC,UAAAA,SAHc;AAId,aAAGT;AAJW,SAAV,CAAN;AAMD,OAPD,CAOE,OAAOW,CAAP,EAAU;AACVP,QAAAA,OAAO,CAACQ,KAAR,CAAc,4CAAd,EAA4DD,CAA5D;AACD;AACF;;AACD,WAAOR,QAAP;AACD,GApBD,CAoBE,OAAOQ,CAAP,EAAU;AACVP,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BM,CAA5B,aAA4BA,CAA5B,uBAA4BA,CAAC,CAAEE,OAA/B;AACD;AACF,CA1BM;AA4BP,OAAO,MAAMC,yBAAyB,GAAG,OACvCC,aADuC,EAEvCC,YAFuC,KAGpC;AACH,QAAMC,aAAa,GAAG,MAAMhC,OAAO,CAACH,UAAU,CAACe,EAAD,EAAKkB,aAAL,CAAX,CAAnC;AAEAX,EAAAA,OAAO,CAACC,GAAR,CAAYY,aAAa,CAACC,QAA1B,EAHG,CAIH;AACA;AACA;AACA;AACD,CAXM;AAaP,OAAO,MAAMC,IAAI,GAAGxC,OAAO,EAApB,C,CACP;;AAEA,MAAMyC,QAAQ,GAAG,IAAIxC,kBAAJ,EAAjB;AAEAwC,QAAQ,CAACC,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAC9B1C,eAAe,CAACsC,IAAD,EAAOC,QAAP,CAAf,CACGI,IADH,CACSC,GAAD,IAASrB,OAAO,CAACC,GAAR,CAAYoB,GAAZ,CADjB,EAEGC,KAFH,CAEUf,CAAD,IAAOP,OAAO,CAACQ,KAAR,CAAc,sBAAd,EAAsCD,CAAtC,CAFhB,CADK,C,CAKP","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  getFirestore,\r\n  setDoc,\r\n  writeBatch,\r\n} from \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAfWKQQsrDJngAVnfnQEZtAFYrRlMVYZaY\",\r\n  authDomain: \"crown-clothing-9ffa8.firebaseapp.com\",\r\n  projectId: \"crown-clothing-9ffa8\",\r\n  storageBucket: \"crown-clothing-9ffa8.appspot.com\",\r\n  messagingSenderId: \"133838497942\",\r\n  appId: \"1:133838497942:web:f791c6b52c03125a773ab7\",\r\n  measurementId: \"G-FR975M0JED\",\r\n};\r\n// Initialize Firebase\r\ninitializeApp(firebaseConfig);\r\n\r\nconst db = getFirestore();\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n  const userRef = doc(db, \"users\", userAuth.uid);\r\n  try {\r\n    const snapShot = await getDoc(userRef);\r\n\r\n    console.log(\"userAuth\", snapShot);\r\n\r\n    if (!snapShot.exists()) {\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n      try {\r\n        setDoc(userRef, {\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData,\r\n        });\r\n      } catch (e) {\r\n        console.error(\"error while setting user data in firestore\", e);\r\n      }\r\n    }\r\n    return snapShot;\r\n  } catch (e) {\r\n    console.log(\"firebase err\", e?.message);\r\n  }\r\n};\r\n\r\nexport const addCollectionAndDocuments = async (\r\n  collectionKey,\r\n  objectsToAdd\r\n) => {\r\n  const collectionRef = await getDocs(collection(db, collectionKey));\r\n\r\n  console.log(collectionRef.metadata);\r\n  // const batch = writeBatch()\r\n  // objectsToAdd.forEach(obj=>{\r\n  //   const newDocRef = collectionRef.docs()\r\n  // })\r\n};\r\n\r\nexport const auth = getAuth();\r\n// export const firestore = firebase.firestore();\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\nprovider.setCustomParameters({ prompt: \"select_account\" });\r\n\r\nexport const signInWithGoogle = () =>\r\n  signInWithPopup(auth, provider)\r\n    .then((res) => console.log(res))\r\n    .catch((e) => console.error(\"google sign in error\", e));\r\n\r\n// export default firebase;\r\n"]},"metadata":{},"sourceType":"module"}